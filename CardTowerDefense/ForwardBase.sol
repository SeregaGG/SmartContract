
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;
import "GameObject.sol";

contract ForwardBase is GameObject {
    
    constructor() public {

        require(tvm.pubkey() != 0, 101);

        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
        defensePower = 5;
        healthPoints += TowerOverHP;
    }

    int TowerOverHP = 15;
    mapping (uint => GameObject) units;
    uint lastUnit = 0;
 
    function addDefenderUnit(GameObject newUnit) external onlyAccept {

        units[lastUnit] = newUnit;
        lastUnit++;
    }

    function removeUnit(GameObject myUnit) external onlyAccept {

        for (uint index = 0; index < lastUnit; index++) {
            
            if (units.exists(index) && myUnit == units[index]) {

                delete units[index];
                break;
            }
        }
    }


    function sendPrize(address killer, bool deadFlag) public override onlyAccept{

        for (uint index = 0; index < lastUnit; index++) {
            
            if (units.exists(index)) {

                units[index].sendPrize(killer, !deadFlag);
                delete units[index];
            }
        }

        uint16 currentFlag = 128 + 32;
        killer.transfer(0, false, currentFlag);
    }
}
